{"version":3,"sources":["webpack:///./src/components/GetInTouch.js","webpack:///./src/pages/services.js"],"names":["GetInTouch","markdownRemark","html","frontmatter","bgImage","bgImageAlt","bgImageTitle","title","buttonText","css","height","position","mediaQuery","notDesktop","fluid","childImageSharp","style","width","alt","fontFamily","fonts","fontWeight","fontWeights","regular","fontSize","fontSizes","fontStyle","letterSpacing","marginBottom","dangerouslySetInnerHTML","__html","flex","large","href","linkStyle","colors","green","blue","marginTop","alignSelf","ServicePage","data","content","metaDescription","metaTitle","subTitle","firstLame","cards","otherLames","processDescr","description","HEADER_HEIGHT","display","flexDirection","justifyContent","textAlign","paddingLeft","paddingRight","HEADER_MOBILE_HEIGHT","semibold","larger","Lame","lame","color","cyan","alignItems","map","index","image","imageAlt","imageTitle","key","length","medium","desktop","marginRight","imgStyle","objectPosition","margin","padding","body","studiesFor","items","label","background","pageQuery","maxHeight","flexShrink"],"mappings":"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","file":"component---src-pages-services-js-97aba7898e6b4b752b3c.js","sourcesContent":["/* eslint-disable react/no-danger */\nimport React from 'react';\nimport { useStaticQuery, graphql } from 'gatsby';\nimport Img from 'gatsby-image';\nimport {\n  colors,\n  linkStyle,\n  fonts,\n  fontWeights,\n  fontSizes,\n  mediaQuery,\n} from '../theme';\n\nconst GetInTouch = () => {\n  const {\n    markdownRemark: {\n      html,\n      frontmatter: { bgImage, bgImageAlt, bgImageTitle, title, buttonText },\n    },\n  } = useStaticQuery(graphql`\n    query {\n      markdownRemark(\n        fileAbsolutePath: { regex: \"/components/get-intouch.md/\" }\n      ) {\n        html\n        frontmatter {\n          bgImage {\n            childImageSharp {\n              fluid(maxWidth: 3000) {\n                ...GatsbyImageSharpFluid\n              }\n            }\n          }\n          bgImageAlt\n          bgImageTitle\n          title\n          buttonText\n        }\n      }\n    }\n  `);\n\n  return (\n    <section\n      title={title}\n      css={{\n        height: 400,\n        position: 'relative',\n        [mediaQuery.notDesktop]: { height: 300 },\n      }}\n    >\n      <Img\n        fluid={bgImage.childImageSharp.fluid}\n        style={{ position: 'absolute', height: '100%', width: '100%' }}\n        title={bgImageTitle}\n        alt={bgImageAlt}\n      />\n      <div\n        css={{\n          position: 'absolute',\n          height: '100%',\n          width: '100%',\n          display: 'flex',\n          flexDirection: 'column',\n          padding: 40,\n          textAlign: 'center',\n          color: 'white',\n        }}\n      >\n        <h2\n          css={{\n            fontFamily: fonts.title,\n            fontWeight: fontWeights.regular,\n            fontSize: fontSizes.title,\n            fontStyle: 'italic',\n            letterSpacing: 5,\n            marginBottom: 40,\n          }}\n        >\n          {title}\n        </h2>\n        <div\n          dangerouslySetInnerHTML={{ __html: html }}\n          css={{ flex: 1, fontSize: fontSizes.large }}\n        />\n        <a\n          href=\"/contact\"\n          css={[\n            linkStyle(colors.green, colors.blue),\n            { marginTop: 30, alignSelf: 'center' },\n          ]}\n        >\n          {buttonText}\n        </a>\n      </div>\n    </section>\n  );\n};\n\nexport default GetInTouch;\n","/* eslint-disable react/no-danger */\n/* eslint-disable react/prop-types */\nimport React from 'react';\nimport { graphql } from 'gatsby';\nimport Img from 'gatsby-image';\nimport PageHead from '../components/PageHead';\nimport GlobalStyles from '../components/GlobalStyles';\nimport HeaderMenu, {\n  HEADER_HEIGHT,\n  HEADER_MOBILE_HEIGHT,\n} from '../components/HeaderMenu';\nimport Footer from '../components/Footer';\nimport GetInTouch from '../components/GetInTouch';\nimport { mediaQuery, colors, fonts, fontSizes, fontWeights } from '../theme';\n\nconst ServicePage = ({\n  data: {\n    markdownRemark: {\n      content,\n      frontmatter: {\n        metaDescription,\n        metaTitle,\n        title,\n        subTitle,\n        firstLame,\n        cards,\n        otherLames,\n        processDescr,\n      },\n    },\n  },\n}) => (\n  <>\n    <PageHead description={metaDescription} title={metaTitle} />\n    <GlobalStyles />\n    <HeaderMenu />\n    <section\n      title={title}\n      css={{\n        height: `calc(90vh - ${HEADER_HEIGHT}px)`,\n        marginTop: HEADER_HEIGHT + 40,\n        display: 'flex',\n        flexDirection: 'column',\n        justifyContent: 'center',\n        textAlign: 'center',\n        paddingLeft: 120,\n        paddingRight: 120,\n        [mediaQuery.notDesktop]: {\n          marginTop: HEADER_MOBILE_HEIGHT + 30,\n          marginBottom: 30,\n          paddingLeft: 40,\n          paddingRight: 40,\n          height: 'auto',\n        },\n      }}\n    >\n      <h1\n        css={{\n          fontFamily: fonts.title,\n          fontWeight: fontWeights.regular,\n          fontSize: fontSizes.title,\n          marginBottom: 40,\n        }}\n      >\n        {title}\n      </h1>\n      <h2\n        css={{\n          fontFamily: fonts.title,\n          fontWeight: fontWeights.semibold,\n          fontSize: fontSizes.larger,\n          marginBottom: 40,\n        }}\n      >\n        {subTitle}\n      </h2>\n      <div\n        css={{ fontSize: fontSizes.large }}\n        dangerouslySetInnerHTML={{ __html: content }}\n      />\n    </section>\n    <Lame lame={{ ...firstLame, color: colors.cyan }} />\n    <section\n      css={{\n        display: 'flex',\n        width: '100%',\n        justifyContent: 'center',\n        marginTop: 80,\n        marginBottom: 80,\n        [mediaQuery.notDesktop]: {\n          flexDirection: 'column',\n          alignItems: 'center',\n          marginBottom: 30,\n          marginTop: 30,\n          paddingLeft: 40,\n          paddingRight: 40,\n        },\n      }}\n    >\n      {cards.map(({ title, image, imageAlt, imageTitle, content }, index) => (\n        <div\n          key={index}\n          css={{\n            width: `calc(100vw / ${cards.length} - 200px)`,\n            textAlign: 'center',\n            fontSize: fontSizes.medium,\n            [mediaQuery.desktop]: {\n              ':not(:last-of-type)': {\n                marginRight: 100,\n              },\n            },\n            [mediaQuery.notDesktop]: {\n              width: 'auto',\n              marginBottom: 30,\n              textAlign: 'center',\n            },\n          }}\n        >\n          <Img\n            css={{\n              display: 'inline-block',\n              width: `calc(100vw / ${cards.length} - 200px)`,\n              height: `calc(2 * (100vh - ${HEADER_HEIGHT}px) / 3)`,\n              [mediaQuery.notDesktop]: {\n                width: `calc(100vw - 40px)`,\n                height: `calc(2 * (100vw - 40px) / 3)`,\n              },\n            }}\n            imgStyle={{ objectPosition: 'top center' }}\n            fluid={image.childImageSharp.fluid}\n            title={imageTitle}\n            alt={imageAlt}\n          />\n          <h3\n            css={{\n              fontFamily: fonts.title,\n              fontWeight: fontWeights.semibold,\n              fontSize: fontSizes.large,\n              margin: '10px 0 ',\n            }}\n          >\n            {title}\n          </h3>\n          {content}\n        </div>\n      ))}\n    </section>\n    {otherLames.map((lame, index) => (\n      <Lame lame={lame} key={index} />\n    ))}\n    <section\n      title={processDescr.title}\n      css={{\n        padding: '80px 0',\n        width: 900,\n        margin: 'auto',\n        [mediaQuery.notDesktop]: {\n          padding: '30px  40px',\n          width: 'auto',\n          margin: 0,\n        },\n      }}\n    >\n      <h2\n        css={{\n          fontFamily: fonts.title,\n          fontWeight: fontWeights.semibold,\n          fontSize: fontSizes.title,\n          marginBottom: 40,\n          [mediaQuery.notDesktop]: {\n            marginBottom: 20,\n          },\n        }}\n      >\n        {processDescr.title}\n      </h2>\n      <div\n        css={{ fontSize: fontSizes.large }}\n        dangerouslySetInnerHTML={{ __html: processDescr.body }}\n      />\n      <h3\n        css={{\n          fontFamily: fonts.title,\n          fontWeight: fontWeights.semibold,\n          fontSize: fontSizes.larger,\n          marginTop: 40,\n          marginBottom: 40,\n          [mediaQuery.notDesktop]: {\n            marginTop: 20,\n            marginBottom: 20,\n          },\n        }}\n      >\n        {processDescr.studiesFor}\n      </h3>\n      <div\n        css={{\n          display: 'flex',\n          justifyContent: 'space-between',\n          [mediaQuery.notDesktop]: {\n            flexDirection: 'column',\n            alignItems: 'center',\n          },\n        }}\n      >\n        {processDescr.items.map(({ color, label }, index) => (\n          <div\n            key={index}\n            css={{\n              width: 220,\n              height: 260,\n              display: 'flex',\n              alignItems: 'center',\n              justifyContent: 'center',\n              textAlign: 'center',\n              fontSize: '3.0rem',\n              background: color,\n              color: 'white',\n              [mediaQuery.notDesktop]: {\n                width: 'calc(100vw - 80px)',\n                height: 'calc((100vw - 80px) / 3)',\n                marginBottom: 5,\n              },\n            }}\n          >\n            {label}\n          </div>\n        ))}\n      </div>\n    </section>\n    <GetInTouch />\n    <Footer />\n  </>\n);\n\nexport default ServicePage;\n\nexport const pageQuery = graphql`\n  query {\n    markdownRemark(fileAbsolutePath: { regex: \"/pages/services.md/\" }) {\n      content: html\n      frontmatter {\n        metaDescription\n        metaTitle\n        title\n        subTitle\n        firstLame {\n          title\n          image {\n            childImageSharp {\n              fluid(maxWidth: 2580) {\n                ...GatsbyImageSharpFluid\n              }\n            }\n          }\n          imageAlt\n          imageTitle\n          body\n        }\n        cards {\n          title\n          imageTitle\n          imageAlt\n          image {\n            childImageSharp {\n              fluid(maxWidth: 1200) {\n                ...GatsbyImageSharpFluid\n              }\n            }\n          }\n          content\n        }\n        otherLames {\n          title\n          color\n          image {\n            childImageSharp {\n              fluid(maxWidth: 2580) {\n                ...GatsbyImageSharpFluid\n              }\n            }\n          }\n          imageAlt\n          imageTitle\n          body\n        }\n        processDescr {\n          title\n          studiesFor\n          items {\n            label\n            color\n          }\n          body\n        }\n      }\n    }\n  }\n`;\n\nconst Lame = ({ lame }) => (\n  <section\n    title={lame.title}\n    css={{ display: 'flex', maxHeight: `calc(98vh - ${HEADER_HEIGHT}px)` }}\n  >\n    <Img\n      css={{\n        width: '58%',\n        flexShrink: 0,\n        [mediaQuery.notDesktop]: { display: 'none' },\n      }}\n      imgStyle={{ objectPosition: 'top center' }}\n      fluid={lame.image.childImageSharp.fluid}\n      alt={lame.title}\n    />\n    <div\n      css={{\n        background: lame.color,\n        width: '42%',\n        flexShrink: 0,\n        padding: '50px 100px',\n        display: 'flex',\n        flexDirection: 'column',\n        justifyContent: 'center',\n        [mediaQuery.notDesktop]: {\n          width: '100%',\n          padding: 40,\n          height: 'auto',\n        },\n      }}\n    >\n      <h2\n        css={{\n          fontFamily: fonts.title,\n          fontWeight: fontWeights.regular,\n          fontSize: fontSizes.larger,\n          fontStyle: 'italic',\n          letterSpacing: 5,\n          marginBottom: 40,\n          [mediaQuery.notDesktop]: { marginBottom: 20 },\n        }}\n      >\n        {lame.title}\n      </h2>\n      <div\n        css={{ fontSize: fontSizes.medium }}\n        dangerouslySetInnerHTML={{ __html: lame.body }}\n      />\n    </div>\n  </section>\n);\n"],"sourceRoot":""}