{"version":3,"sources":["webpack:///./node_modules/gatsby/node_modules/core-js/modules/es6.string.small.js","webpack:///./src/utils/formatDate.js","webpack:///./src/templates/article.js","webpack:///./src/components/PostHtmlRenderer.js"],"names":["createHTML","this","formatDate","date","Date","Intl","DateTimeFormat","year","month","day","format","ArticlePage","data","markdownRemark","frontmatter","metaTitle","metaDescription","title","mainImage","mainImageTitle","mainImageAlt","author","html","description","css","display","width","maxWidth","maxHeight","overflow","margin","HEADER_HEIGHT","mediaQuery","notDesktop","HEADER_MOBILE_HEIGHT","fluid","childImageSharp","alt","marginBottom","fontFamily","fonts","fontWeight","fontWeights","regular","fontSize","fontSizes","normal","fontStyle","color","colors","darkGrey","dark","smartphone","dangerouslySetInnerHTML","__html","pageQuery","PostHtmlRenderer","props","medium","h2","larger","marginTop","large","h4","mediumLarge","li","img","figcaption","small","textAlign","figure","hr","border","borderTop"],"mappings":"2FAEA,EAAQ,OAAR,CAA0B,SAAS,SAAUA,GAC3C,OAAO,WACL,OAAOA,EAAWC,KAAM,QAAS,GAAI,S,kCCQ1BC,IAZI,SAACC,GACZA,aAAgBC,OACpBD,EAAO,IAAIC,KAAKD,IAOlB,OAAO,IAAIE,KAAKC,eAAe,QALf,CACdC,KAAM,UACNC,MAAO,QACPC,IAAK,YAE0CC,OAAOP,K,oTCiG3CQ,UA3FK,SAAC,GAAD,cAClBC,KACEC,eAFgB,IAGdC,YACEC,EAJY,EAIZA,UACAC,EALY,EAKZA,gBACAC,EANY,EAMZA,MACAd,EAPY,EAOZA,KACAe,EARY,EAQZA,UACAC,EATY,EASZA,eACAC,EAVY,EAUZA,aACAC,EAXY,EAWZA,OAEFC,EAbc,EAadA,KAbc,OAiBlB,8BACE,YAAC,IAAD,CAAUC,YAAaP,EAAiBC,MAAOF,IAC/C,YAAC,IAAD,MACA,YAAC,IAAD,MACA,uBACE,YAAC,IAAD,CACES,IAAG,gBACDC,QAAS,QACTC,MAAO,qBACPC,SAAU,KACVC,UAAW,OACXC,SAAU,SACVC,OAAWC,IAAgB,GAArB,gBANL,EAOAC,IAAWC,YAAa,CACvBH,OAAWI,IAAuB,GAA5B,gBARP,IAWHC,MAAOjB,EAAUkB,gBAAgBD,MACjCE,IAAKjB,EACLH,MAAOE,IAET,mBACEK,IAAG,GAMH,mBACEA,IAAG,gBACDc,aAAc,IADb,EAEAN,IAAWC,YAAa,CACvBK,aAAc,IAHf,KAOH,kBACEd,IAAG,YAAE,CACHe,WAAYC,IAAMvB,MAClBwB,WAAYC,IAAYC,QACxBC,SAAUC,IAAU5B,SAGrBA,GAEH,iBACEO,IAAG,YAAE,CACHoB,SAAUC,IAAUC,OACpBC,UAAW,SACXC,MAAOC,IAAOC,YAGhB,oBAAM1B,IAAG,YAAE,CAAEwB,MAAOC,IAAOE,KAAMJ,UAAW,YAA5C,MACM1B,GAEN,uBACA,wBAAOnB,YAAWC,MAGtB,YAAC,IAAD,CACEmB,KAAMA,EACNE,IAAG,gBACDc,aAAc,KADb,EAEAN,IAAWoB,YAAa,CACvBd,aAAc,IAHf,IAMHe,wBAAyB,CAAEC,OAAQhC,MAGvC,YAAC,IAAD,SAMC,IAAMiC,EAAS,a,iWC/DPC,IAzCU,SAAC,GAAD,MAAGlC,EAAH,EAAGA,KAASmC,E,oIAAZ,oBACvB,qBACEjC,IAAG,gBACDoB,SAAUC,IAAUa,OAEpBC,GAAI,CACFf,SAAUC,IAAUe,OACpBC,UAAW,GACXvB,aAAc,IAEhB,QAAS,CACPM,SAAUC,IAAUiB,MACpBD,UAAW,GACXvB,aAAc,IAEhByB,GAAI,CAAEnB,SAAUC,IAAUmB,aAC1B,UAAW,CAAE1B,aAAc,GAAIuB,UAAW,IAC1CI,GAAI,CAAE3B,aAAc,IACpB4B,IAAK,CAAEvC,SAAU,QACjBwC,WAAY,CACVnB,MAAOC,IAAOC,SACdN,SAAUC,IAAUuB,MACpBrB,UAAW,SACXsB,UAAW,UAEbC,OAAQ,CAAExC,OAAQ,aAClByC,GAAI,CACF7C,MAAO,QACPI,OAAQ,YACR0C,OAAQ,EACRC,UAAU,cAAexB,IAAOE,OA5BjC,EA8BAnB,IAAWoB,YAAa,CACvBR,SAAUC,IAAUmB,aA/BrB,IAkCHX,wBAAyB,CAAEC,OAAQhC,IAC/BmC","file":"component---src-templates-article-js-5c759942dbf0aadf1069.js","sourcesContent":["'use strict';\n// B.2.3.11 String.prototype.small()\nrequire('./_string-html')('small', function (createHTML) {\n  return function small() {\n    return createHTML(this, 'small', '', '');\n  };\n});\n","const formatDate = (date) => {\n  if (!(date instanceof Date)) {\n    date = new Date(date);\n  }\n  const options = {\n    year: 'numeric',\n    month: 'short',\n    day: 'numeric',\n  };\n  return new Intl.DateTimeFormat('en-US', options).format(date);\n};\n\nexport default formatDate;\n","/* eslint-disable react/prop-types */\nimport React from 'react';\nimport { graphql } from 'gatsby';\nimport Img from 'gatsby-image';\nimport PageHead from '../components/PageHead';\nimport GlobalStyles from '../components/GlobalStyles';\nimport HeaderMenu, {\n  HEADER_HEIGHT,\n  HEADER_MOBILE_HEIGHT,\n} from '../components/HeaderMenu';\nimport Footer from '../components/Footer';\nimport { fonts, fontSizes, fontWeights, colors, mediaQuery } from '../theme';\nimport formatDate from '../utils/formatDate';\nimport PostHtmlRenderer from '../components/PostHtmlRenderer';\n\nconst ArticlePage = ({\n  data: {\n    markdownRemark: {\n      frontmatter: {\n        metaTitle,\n        metaDescription,\n        title,\n        date,\n        mainImage,\n        mainImageTitle,\n        mainImageAlt,\n        author,\n      },\n      html,\n    },\n  },\n}) => (\n  <>\n    <PageHead description={metaDescription} title={metaTitle} />\n    <GlobalStyles />\n    <HeaderMenu />\n    <div>\n      <Img\n        css={{\n          display: 'block',\n          width: 'calc(100vw - 80px)',\n          maxWidth: 1600,\n          maxHeight: '40vh',\n          overflow: 'hidden',\n          margin: `${HEADER_HEIGHT + 40}px auto 60px`,\n          [mediaQuery.notDesktop]: {\n            margin: `${HEADER_MOBILE_HEIGHT + 40}px auto 60px`,\n          },\n        }}\n        fluid={mainImage.childImageSharp.fluid}\n        alt={mainImageAlt}\n        title={mainImageTitle}\n      />\n      <div\n        css={{\n          maxWidth: 840,\n          padding: '0 40px',\n          margin: 'auto',\n        }}\n      >\n        <div\n          css={{\n            marginBottom: 60,\n            [mediaQuery.notDesktop]: {\n              marginBottom: 40,\n            },\n          }}\n        >\n          <h1\n            css={{\n              fontFamily: fonts.title,\n              fontWeight: fontWeights.regular,\n              fontSize: fontSizes.title,\n            }}\n          >\n            {title}\n          </h1>\n          <p\n            css={{\n              fontSize: fontSizes.normal,\n              fontStyle: 'italic',\n              color: colors.darkGrey,\n            }}\n          >\n            <span css={{ color: colors.dark, fontStyle: 'normal' }}>\n              By {author}\n            </span>\n            <br />\n            <span>{formatDate(date)}</span>\n          </p>\n        </div>\n        <PostHtmlRenderer\n          html={html}\n          css={{\n            marginBottom: 160,\n            [mediaQuery.smartphone]: {\n              marginBottom: 80,\n            },\n          }}\n          dangerouslySetInnerHTML={{ __html: html }}\n        />\n      </div>\n      <Footer />\n    </div>\n  </>\n);\nexport default ArticlePage;\n\nexport const pageQuery = graphql`\n  query($sourcePath: String!) {\n    markdownRemark(fileAbsolutePath: { eq: $sourcePath }) {\n      frontmatter {\n        metaTitle\n        metaDescription\n        title\n        date\n        mainImage {\n          childImageSharp {\n            fluid(maxWidth: 2560) {\n              ...GatsbyImageSharpFluid\n            }\n          }\n        }\n        mainImageAlt\n        mainImageTitle\n        author\n      }\n      html\n    }\n  }\n`;\n","import React from 'react';\nimport { fontSizes, colors, mediaQuery } from '../theme';\n\n// eslint-disable-next-line react/prop-types\nconst PostHtmlRenderer = ({ html, ...props }) => (\n  <div\n    css={{\n      fontSize: fontSizes.medium,\n\n      h2: {\n        fontSize: fontSizes.larger,\n        marginTop: 40,\n        marginBottom: 20,\n      },\n      'h3,h4': {\n        fontSize: fontSizes.large,\n        marginTop: 30,\n        marginBottom: 15,\n      },\n      h4: { fontSize: fontSizes.mediumLarge },\n      'p,ul,ol': { marginBottom: 15, marginTop: 10 },\n      li: { marginBottom: 10 },\n      img: { maxWidth: '100%' },\n      figcaption: {\n        color: colors.darkGrey,\n        fontSize: fontSizes.small,\n        fontStyle: 'italic',\n        textAlign: 'center',\n      },\n      figure: { margin: '40px auto' },\n      hr: {\n        width: '150px',\n        margin: '30px auto',\n        border: 0,\n        borderTop: `1px dashed ${colors.dark}`,\n      },\n      [mediaQuery.smartphone]: {\n        fontSize: fontSizes.mediumLarge,\n      },\n    }}\n    dangerouslySetInnerHTML={{ __html: html }}\n    {...props}\n  />\n);\n\nexport default PostHtmlRenderer;\n"],"sourceRoot":""}