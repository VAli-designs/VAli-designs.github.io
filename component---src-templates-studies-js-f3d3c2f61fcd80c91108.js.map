{"version":3,"sources":["webpack:///./src/components/GetInTouch.js","webpack:///./src/templates/studies.js"],"names":["GetInTouch","markdownRemark","html","frontmatter","bgImage","bgImageAlt","bgImageTitle","title","buttonText","css","height","position","mediaQuery","notDesktop","fluid","childImageSharp","style","width","alt","fontFamily","fonts","fontWeight","fontWeights","regular","fontSize","fontSizes","fontStyle","letterSpacing","marginBottom","dangerouslySetInnerHTML","__html","flex","large","href","linkStyle","colors","green","blue","marginTop","alignSelf","StudyPageTemplate","data","indexPage","metaTitle","metaDescription","subTitle","color","mainImage","mainImageTitle","mainImageAlt","clientNeedsTitle","clientNeedsContent","steps","description","display","flexDirection","HEADER_HEIGHT","HEADER_MOBILE_HEIGHT","textAlign","paddingLeft","padding","paddingRight","alignItems","marginRight","medium","maxWidth","larger","maxHeight","overflow","background","smartphone","smallTitle","margin","length","map","index","image","imageAlt","imageTitle","body","key","paddingBottom","paddingTop","marginLeft","justifyContent","bigDesktop","lightGrey","desktop","to","orange","pink","studiesButtonText","pageQuery"],"mappings":"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","file":"component---src-templates-studies-js-f3d3c2f61fcd80c91108.js","sourcesContent":["/* eslint-disable react/no-danger */\nimport React from 'react';\nimport { useStaticQuery, graphql } from 'gatsby';\nimport Img from 'gatsby-image';\nimport {\n  colors,\n  linkStyle,\n  fonts,\n  fontWeights,\n  fontSizes,\n  mediaQuery,\n} from '../theme';\n\nconst GetInTouch = () => {\n  const {\n    markdownRemark: {\n      html,\n      frontmatter: { bgImage, bgImageAlt, bgImageTitle, title, buttonText },\n    },\n  } = useStaticQuery(graphql`\n    query {\n      markdownRemark(\n        fileAbsolutePath: { regex: \"/components/get-intouch.md/\" }\n      ) {\n        html\n        frontmatter {\n          bgImage {\n            childImageSharp {\n              fluid(maxWidth: 3000) {\n                ...GatsbyImageSharpFluid\n              }\n            }\n          }\n          bgImageAlt\n          bgImageTitle\n          title\n          buttonText\n        }\n      }\n    }\n  `);\n\n  return (\n    <section\n      title={title}\n      css={{\n        height: 400,\n        position: 'relative',\n        [mediaQuery.notDesktop]: { height: 300 },\n      }}\n    >\n      <Img\n        fluid={bgImage.childImageSharp.fluid}\n        style={{ position: 'absolute', height: '100%', width: '100%' }}\n        title={bgImageTitle}\n        alt={bgImageAlt}\n      />\n      <div\n        css={{\n          position: 'absolute',\n          height: '100%',\n          width: '100%',\n          display: 'flex',\n          flexDirection: 'column',\n          padding: 40,\n          textAlign: 'center',\n          color: 'white',\n        }}\n      >\n        <h2\n          css={{\n            fontFamily: fonts.title,\n            fontWeight: fontWeights.regular,\n            fontSize: fontSizes.title,\n            fontStyle: 'italic',\n            letterSpacing: 5,\n            marginBottom: 40,\n          }}\n        >\n          {title}\n        </h2>\n        <div\n          dangerouslySetInnerHTML={{ __html: html }}\n          css={{ flex: 1, fontSize: fontSizes.large }}\n        />\n        <a\n          href=\"/contact\"\n          css={[\n            linkStyle(colors.green, colors.blue),\n            { marginTop: 30, alignSelf: 'center' },\n          ]}\n        >\n          {buttonText}\n        </a>\n      </div>\n    </section>\n  );\n};\n\nexport default GetInTouch;\n","/* eslint-disable react/no-danger */\n/* eslint-disable react/prop-types */\nimport React from 'react';\nimport { graphql, Link } from 'gatsby';\nimport Img from 'gatsby-image';\nimport PageHead from '../components/PageHead';\nimport GlobalStyles from '../components/GlobalStyles';\nimport HeaderMenu, {\n  HEADER_HEIGHT,\n  HEADER_MOBILE_HEIGHT,\n} from '../components/HeaderMenu';\nimport Footer from '../components/Footer';\nimport GetInTouch from '../components/GetInTouch';\nimport {\n  fonts,\n  fontSizes,\n  fontWeights,\n  colors,\n  mediaQuery,\n  linkStyle,\n} from '../theme';\n\nconst StudyPageTemplate = ({\n  data: {\n    indexPage,\n    markdownRemark: {\n      frontmatter: {\n        metaTitle,\n        metaDescription,\n        title,\n        subTitle,\n        color,\n        mainImage,\n        mainImageTitle,\n        mainImageAlt,\n        clientNeedsTitle,\n        clientNeedsContent,\n        steps,\n      },\n      html,\n    },\n  },\n}) => (\n  <>\n    <PageHead description={metaDescription} title={metaTitle} />\n    <GlobalStyles />\n    <HeaderMenu />\n    <div\n      css={{\n        display: 'flex',\n        flexDirection: 'column',\n        marginTop: HEADER_HEIGHT + 80,\n        [mediaQuery.notDesktop]: {\n          marginTop: HEADER_MOBILE_HEIGHT + 30,\n        },\n      }}\n    >\n      <h1\n        css={{\n          fontFamily: fonts.title,\n          fontWeight: fontWeights.regular,\n          fontSize: fontSizes.title,\n          textAlign: 'left',\n          marginBottom: 40,\n          paddingLeft: 120,\n          [mediaQuery.notDesktop]: {\n            marginBottom: 30,\n            textAlign: 'center',\n            padding: '0 40px',\n          },\n        }}\n      >\n        {title}\n      </h1>\n      <div\n        css={{\n          display: 'flex',\n          marginBottom: 60,\n          paddingLeft: 120,\n          paddingRight: 120,\n          [mediaQuery.notDesktop]: {\n            paddingLeft: 40,\n            paddingRight: 40,\n            marginBottom: 30,\n            flexDirection: 'column-reverse',\n            alignItems: 'center',\n          },\n        }}\n      >\n        <div\n          css={{\n            width: '60%',\n            marginRight: 60,\n            fontSize: fontSizes.medium,\n            display: 'flex',\n            flexDirection: 'column',\n            maxWidth: 800,\n            [mediaQuery.notDesktop]: {\n              width: 'auto',\n              marginRight: 0,\n            },\n          }}\n        >\n          <h2\n            css={{\n              color,\n              fontFamily: fonts.title,\n              fontWeight: fontWeights.regular,\n              fontSize: fontSizes.larger,\n              marginBottom: 20,\n            }}\n          >\n            {subTitle}\n          </h2>\n          <div\n            css={{ flex: 1 }}\n            dangerouslySetInnerHTML={{\n              __html: html,\n            }}\n          />\n        </div>\n        <Img\n          css={{\n            flex: 1,\n            maxHeight: 500,\n            [mediaQuery.notDesktop]: {\n              flex: 0,\n              width: 'calc(100vw - 80px)',\n              maxWidth: 800,\n              maxHeight: 'calc(9 * (100vw - 80px) / 16)',\n              marginBottom: 20,\n              overflow: 'hidden',\n            },\n          }}\n          fluid={mainImage.childImageSharp.fluid}\n          alt={mainImageAlt}\n          title={mainImageTitle}\n        />\n      </div>\n    </div>\n    <section\n      title=\"client's need\"\n      css={{\n        textAlign: 'center',\n        padding: 60,\n        color: 'white',\n        background: color,\n        [mediaQuery.smartphone]: {\n          padding: 30,\n        },\n      }}\n    >\n      <h2\n        css={{\n          marginBottom: 40,\n          fontSize: fontSizes.smallTitle,\n          fontFamily: fonts.title,\n          [mediaQuery.notDesktop]: {\n            marginBottom: 20,\n          },\n          [mediaQuery.smartphone]: {\n            fontSize: fontSizes.larger,\n          },\n        }}\n      >\n        {clientNeedsTitle}\n      </h2>\n      <p\n        css={{\n          fontSize: fontSizes.medium,\n          width: '70%',\n          maxWidth: 800,\n          margin: 'auto',\n          [mediaQuery.notDesktop]: {\n            width: 'auto',\n          },\n        }}\n      >\n        {clientNeedsContent}\n      </p>\n    </section>\n    <h3\n      css={{\n        fontFamily: fonts.title,\n        fontWeight: fontWeights.regular,\n        fontSize: fontSizes.title,\n        margin: '80px 120px  20px',\n        textAlign: 'center',\n        [mediaQuery.notDesktop]: {\n          margin: '30px 40px',\n        },\n        [mediaQuery.smartphone]: {\n          fontSize: fontSizes.larger,\n        },\n      }}\n    >\n      All About the process - {steps.length} steps\n    </h3>\n    {steps.map(({ title, image, imageAlt, imageTitle, body }, index) => (\n      <section\n        key={index}\n        css={[\n          {\n            display: 'flex',\n            paddingBottom: 70,\n            paddingTop: 50,\n            marginLeft: 120,\n            marginRight: 120,\n            maxWidth: 1400,\n            justifyContent: 'space-around',\n            [mediaQuery.bigDesktop]: {\n              margin: 'auto',\n            },\n            [mediaQuery.notDesktop]: {\n              paddingTop: 0,\n              marginLeft: 40,\n              marginRight: 40,\n              marginBottom: 40,\n              paddingBottom: 0,\n              flexDirection: 'column',\n            },\n          },\n          index === steps.length - 1 && {\n            background: colors.lightGrey,\n            [mediaQuery.desktop]: {\n              marginBottom: '80px !important',\n            },\n          },\n        ]}\n      >\n        <div\n          css={[\n            {\n              width: '50%',\n              marginRight: 60,\n              fontSize: fontSizes.medium,\n              display: 'flex',\n              flexDirection: 'column',\n              maxWidth: 700,\n              [mediaQuery.notDesktop]: {\n                width: 'auto !important',\n                textAlign: 'center',\n                marginRight: 0,\n                marginBottom: 20,\n                maxWidth: 'none',\n              },\n            },\n            !image && {\n              width: '60%',\n              marginRight: 0,\n              marginBottom: '0 !important',\n              textAlign: 'center',\n              alignItems: 'center',\n              [mediaQuery.notDesktop]: {\n                padding: 20,\n              },\n            },\n          ]}\n        >\n          <h3\n            css={{\n              color,\n              fontFamily: fonts.title,\n              fontWeight: fontWeights.regular,\n              fontSize: fontSizes.title,\n              marginBottom: 40,\n              [mediaQuery.notDesktop]: {\n                marginBottom: 20,\n              },\n              [mediaQuery.smartphone]: {\n                fontSize: fontSizes.larger,\n              },\n            }}\n          >\n            {index + 1}/{steps.length} <br />\n            {title}\n          </h3>\n          <div css={{ flex: 1 }} dangerouslySetInnerHTML={{ __html: body }} />\n        </div>\n        {image && (\n          <Img\n            css={{ flex: 1, maxHeight: 440 }}\n            fluid={image.childImageSharp.fluid}\n            alt={imageAlt}\n            title={imageTitle}\n          />\n        )}\n      </section>\n    ))}\n    <Link\n      to=\"/ux-studies\"\n      css={[\n        linkStyle(colors.orange, colors.pink),\n        {\n          display: 'block',\n          width: 280,\n          margin: 'auto',\n          marginBottom: 80,\n        },\n      ]}\n    >\n      {indexPage.frontmatter.studiesButtonText}\n    </Link>\n    <GetInTouch />\n    <Footer />\n  </>\n);\n\nexport default StudyPageTemplate;\n\nexport const pageQuery = graphql`\n  query($sourcePath: String!) {\n    indexPage: markdownRemark(fileAbsolutePath: { regex: \"/pages/index.md/\" }) {\n      frontmatter {\n        studiesButtonText\n      }\n    }\n    markdownRemark(fileAbsolutePath: { eq: $sourcePath }) {\n      frontmatter {\n        metaTitle\n        metaDescription\n        title\n        subTitle\n        color\n        mainImage {\n          childImageSharp {\n            fluid(maxWidth: 2560) {\n              ...GatsbyImageSharpFluid\n            }\n          }\n        }\n        mainImageTitle\n        mainImageAlt\n        clientNeedsTitle\n        clientNeedsContent\n        steps {\n          title\n          image {\n            childImageSharp {\n              fluid(maxWidth: 2560) {\n                ...GatsbyImageSharpFluid\n              }\n            }\n          }\n          imageAlt\n          imageTitle\n          body\n        }\n      }\n      html\n    }\n  }\n`;\n"],"sourceRoot":""}