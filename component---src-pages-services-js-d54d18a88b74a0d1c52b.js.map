{"version":3,"sources":["webpack:///./src/components/GetInTouch.js","webpack:///./src/components/TargetedUsers.js","webpack:///./src/pages/services.js"],"names":["GetInTouch","markdownRemark","html","frontmatter","bgImage","bgImageAlt","bgImageTitle","title","buttonText","css","height","position","mediaQuery","notDesktop","fluid","childImageSharp","style","width","alt","fontFamily","fonts","fontWeight","fontWeights","regular","fontSize","fontSizes","fontStyle","letterSpacing","marginBottom","dangerouslySetInnerHTML","__html","flex","large","href","linkStyle","colors","green","blue","marginTop","alignSelf","TargetedUsers","props","items","smallTitle","textAlign","maxWidth","paddingBottom","content","bottom","background","dark","left","display","justifyContent","flexDirection","alignItems","map","index","color","label","key","ServicePage","data","metaDescription","metaTitle","subTitle","firstLame","cards","otherLames","processDescr","description","HEADER_HEIGHT","minHeight","paddingLeft","paddingRight","HEADER_MOBILE_HEIGHT","semibold","larger","Lame","lame","cyan","preservereAspectRatio","desktop","image","imageAlt","imageTitle","length","medium","marginRight","imgStyle","objectPosition","margin","inverted","padding","body","pageQuery","flexShrink","overflow","top","transform"],"mappings":"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","file":"component---src-pages-services-js-d54d18a88b74a0d1c52b.js","sourcesContent":["/* eslint-disable react/no-danger */\nimport React from 'react';\nimport { useStaticQuery, graphql } from 'gatsby';\nimport Img from 'gatsby-image';\nimport {\n  colors,\n  linkStyle,\n  fonts,\n  fontWeights,\n  fontSizes,\n  mediaQuery,\n} from '../theme';\n\nconst GetInTouch = () => {\n  const {\n    markdownRemark: {\n      html,\n      frontmatter: { bgImage, bgImageAlt, bgImageTitle, title, buttonText },\n    },\n  } = useStaticQuery(graphql`\n    query {\n      markdownRemark(\n        fileAbsolutePath: { regex: \"/components/get-intouch.md/\" }\n      ) {\n        html\n        frontmatter {\n          bgImage {\n            childImageSharp {\n              fluid(maxWidth: 3000) {\n                ...GatsbyImageSharpFluid\n              }\n            }\n          }\n          bgImageAlt\n          bgImageTitle\n          title\n          buttonText\n        }\n      }\n    }\n  `);\n\n  return (\n    <section\n      title={title}\n      css={{\n        height: 400,\n        position: 'relative',\n        [mediaQuery.notDesktop]: { height: 300 },\n      }}\n    >\n      <Img\n        fluid={bgImage.childImageSharp.fluid}\n        style={{ position: 'absolute', height: '100%', width: '100%' }}\n        title={bgImageTitle}\n        alt={bgImageAlt}\n      />\n      <div\n        css={{\n          position: 'absolute',\n          height: '100%',\n          width: '100%',\n          display: 'flex',\n          flexDirection: 'column',\n          padding: 40,\n          textAlign: 'center',\n          color: 'white',\n        }}\n      >\n        <h2\n          css={{\n            fontFamily: fonts.title,\n            fontWeight: fontWeights.regular,\n            fontSize: fontSizes.title,\n            fontStyle: 'italic',\n            letterSpacing: 5,\n            marginBottom: 40,\n          }}\n        >\n          {title}\n        </h2>\n        <div\n          dangerouslySetInnerHTML={{ __html: html }}\n          css={{ flex: 1, fontSize: fontSizes.large }}\n        />\n        <a\n          href=\"/contact\"\n          css={[\n            linkStyle(colors.green, colors.blue),\n            { marginTop: 30, alignSelf: 'center' },\n          ]}\n        >\n          {buttonText}\n        </a>\n      </div>\n    </section>\n  );\n};\n\nexport default GetInTouch;\n","/* eslint-disable react/no-danger */\nimport React from 'react';\nimport { useStaticQuery, graphql } from 'gatsby';\nimport { fonts, fontWeights, fontSizes, mediaQuery, colors } from '../theme';\n\nconst TargetedUsers = (props) => {\n  const {\n    markdownRemark: {\n      frontmatter: { title, items },\n    },\n  } = useStaticQuery(graphql`\n    query {\n      markdownRemark(\n        fileAbsolutePath: { regex: \"/components/targeted-users.md/\" }\n      ) {\n        frontmatter {\n          title\n          items {\n            label\n            color\n          }\n        }\n      }\n    }\n  `);\n  return (\n    <section title={title} {...props}>\n      <h2\n        css={{\n          fontFamily: fonts.title,\n          fontWeight: fontWeights.regular,\n          fontSize: fontSizes.smallTitle,\n          alignSelf: 'center',\n          position: 'relative',\n          textAlign: 'center',\n          maxWidth: 800,\n          marginTop: 40,\n          paddingBottom: 80,\n          ':after': {\n            content: '\" \"',\n            position: 'absolute',\n            bottom: 40,\n            width: 30,\n            height: 2,\n            background: colors.dark,\n            left: 'calc(50% - 15px)',\n          },\n        }}\n      >\n        {title}\n      </h2>\n      <div\n        css={{\n          display: 'flex',\n          justifyContent: 'space-between',\n          [mediaQuery.notDesktop]: {\n            flexDirection: 'column',\n            alignItems: 'center',\n          },\n        }}\n      >\n        {items.map(({ color, label }, index) => (\n          <div\n            key={index}\n            css={{\n              width: 220,\n              height: 260,\n              display: 'flex',\n              alignItems: 'center',\n              justifyContent: 'center',\n              textAlign: 'center',\n              fontSize: '3.0rem',\n              background: color,\n              color: 'white',\n              [mediaQuery.notDesktop]: {\n                width: 'calc(100vw - 80px)',\n                height: 'calc((100vw - 80px) / 3)',\n                marginBottom: 5,\n              },\n            }}\n          >\n            {label}\n          </div>\n        ))}\n      </div>\n    </section>\n  );\n};\n\nexport default TargetedUsers;\n","/* eslint-disable react/no-danger */\n/* eslint-disable react/prop-types */\nimport React from 'react';\nimport { graphql } from 'gatsby';\nimport Img from 'gatsby-image';\nimport PageHead from '../components/PageHead';\nimport GlobalStyles from '../components/GlobalStyles';\nimport HeaderMenu, {\n  HEADER_HEIGHT,\n  HEADER_MOBILE_HEIGHT,\n} from '../components/HeaderMenu';\nimport Footer from '../components/Footer';\nimport GetInTouch from '../components/GetInTouch';\nimport { mediaQuery, colors, fonts, fontSizes, fontWeights } from '../theme';\nimport TargetedUsers from '../components/TargetedUsers';\n\nconst ServicePage = ({\n  data: {\n    markdownRemark: {\n      content,\n      frontmatter: {\n        metaDescription,\n        metaTitle,\n        title,\n        subTitle,\n        firstLame,\n        cards,\n        otherLames,\n        processDescr,\n      },\n    },\n  },\n}) => (\n  <>\n    <PageHead description={metaDescription} title={metaTitle} />\n    <GlobalStyles />\n    <HeaderMenu />\n    <section\n      title={title}\n      css={{\n        height: `calc(90vh - ${HEADER_HEIGHT}px)`,\n        minHeight: 500,\n        marginTop: HEADER_HEIGHT + 40,\n        display: 'flex',\n        flexDirection: 'column',\n        justifyContent: 'center',\n        textAlign: 'center',\n        paddingLeft: 120,\n        paddingRight: 120,\n        [mediaQuery.notDesktop]: {\n          marginTop: HEADER_MOBILE_HEIGHT + 30,\n          marginBottom: 30,\n          paddingLeft: 40,\n          paddingRight: 40,\n          height: 'auto',\n        },\n      }}\n    >\n      <h1\n        css={{\n          fontFamily: fonts.title,\n          fontWeight: fontWeights.regular,\n          fontSize: fontSizes.title,\n          marginBottom: 40,\n        }}\n      >\n        {title}\n      </h1>\n      <h2\n        css={{\n          fontFamily: fonts.title,\n          fontWeight: fontWeights.semibold,\n          fontSize: fontSizes.larger,\n          marginBottom: 40,\n        }}\n      >\n        {subTitle}\n      </h2>\n      <div\n        css={{ fontSize: fontSizes.large }}\n        dangerouslySetInnerHTML={{ __html: content }}\n      />\n    </section>\n    <Lame\n      lame={{ ...firstLame, color: colors.cyan }}\n      preservereAspectRatio\n      css={{ [mediaQuery.desktop]: { minHeight: 750 } }}\n    />\n    <section\n      css={{\n        display: 'flex',\n        width: '100%',\n        justifyContent: 'center',\n        marginTop: 120,\n        marginBottom: 120,\n        [mediaQuery.notDesktop]: {\n          flexDirection: 'column',\n          alignItems: 'center',\n          marginBottom: 30,\n          marginTop: 30,\n          paddingLeft: 40,\n          paddingRight: 40,\n        },\n      }}\n    >\n      {cards.map(({ title, image, imageAlt, imageTitle, content }, index) => (\n        <div\n          key={index}\n          css={{\n            width: `calc(100vw / ${cards.length} - 200px)`,\n            textAlign: 'center',\n            fontSize: fontSizes.medium,\n            [mediaQuery.desktop]: {\n              ':not(:last-of-type)': {\n                marginRight: 100,\n              },\n            },\n            [mediaQuery.notDesktop]: {\n              width: 'auto',\n              marginBottom: 30,\n              textAlign: 'center',\n            },\n          }}\n        >\n          <Img\n            css={{\n              display: 'inline-block',\n              width: `calc(100vw / ${cards.length} - 200px)`,\n              height: `calc(2 * (100vh - ${HEADER_HEIGHT}px) / 3)`,\n              [mediaQuery.notDesktop]: {\n                width: `calc(100vw - 40px)`,\n                height: `calc(2 * (100vw - 40px) / 3)`,\n              },\n            }}\n            imgStyle={{ objectPosition: 'top center' }}\n            fluid={image.childImageSharp.fluid}\n            title={imageTitle}\n            alt={imageAlt}\n          />\n          <h3\n            css={{\n              fontFamily: fonts.title,\n              fontWeight: fontWeights.semibold,\n              fontSize: fontSizes.large,\n              margin: '10px 0 ',\n            }}\n          >\n            {title}\n          </h3>\n          {content}\n        </div>\n      ))}\n    </section>\n    {otherLames.map((lame, index) => (\n      <Lame\n        lame={lame}\n        key={index}\n        inverted={index % 2 === 1}\n        preservereAspectRatio\n        css={{\n          marginBottom: 120,\n          [mediaQuery.notDesktop]: {\n            marginBottom: 30,\n          },\n        }}\n      />\n    ))}\n    <section\n      title={processDescr.title}\n      css={{\n        padding: '0 0 120px',\n        width: 900,\n        margin: 'auto',\n        [mediaQuery.notDesktop]: {\n          padding: '30px  40px',\n          width: 'auto',\n          margin: 0,\n        },\n      }}\n    >\n      <h2\n        css={{\n          fontFamily: fonts.title,\n          fontWeight: fontWeights.semibold,\n          fontSize: fontSizes.title,\n          marginBottom: 40,\n          [mediaQuery.notDesktop]: {\n            marginBottom: 20,\n          },\n        }}\n      >\n        {processDescr.title}\n      </h2>\n      <div\n        css={{ fontSize: fontSizes.large }}\n        dangerouslySetInnerHTML={{ __html: processDescr.body }}\n      />\n      <TargetedUsers />\n    </section>\n    <GetInTouch />\n    <Footer />\n  </>\n);\n\nexport default ServicePage;\n\nexport const pageQuery = graphql`\n  query {\n    markdownRemark(fileAbsolutePath: { regex: \"/pages/services.md/\" }) {\n      content: html\n      frontmatter {\n        metaDescription\n        metaTitle\n        title\n        subTitle\n        firstLame {\n          title\n          image {\n            childImageSharp {\n              fluid(maxWidth: 2580) {\n                ...GatsbyImageSharpFluid\n              }\n            }\n          }\n          imageAlt\n          imageTitle\n          body\n        }\n        cards {\n          title\n          imageTitle\n          imageAlt\n          image {\n            childImageSharp {\n              fluid(maxWidth: 1200) {\n                ...GatsbyImageSharpFluid\n              }\n            }\n          }\n          content\n        }\n        otherLames {\n          title\n          color\n          image {\n            childImageSharp {\n              fluid(maxWidth: 2580) {\n                ...GatsbyImageSharpFluid\n              }\n            }\n          }\n          imageAlt\n          imageTitle\n          body\n        }\n        processDescr {\n          title\n          body\n        }\n      }\n    }\n  }\n`;\n\nconst Lame = ({ lame, inverted, preservereAspectRatio, ...props }) => (\n  <section\n    title={lame.title}\n    css={{\n      background: lame.color,\n      display: 'flex',\n      [mediaQuery.desktop]: {\n        minHeight: 500,\n        height: `calc(98vh - ${HEADER_HEIGHT}px)`,\n      },\n      flexDirection: inverted ? 'row-reverse' : 'row',\n    }}\n    {...props}\n  >\n    <div\n      css={{\n        position: 'relative',\n        width: '58%',\n        flexShrink: 0,\n        overflow: 'hidden',\n        [mediaQuery.notDesktop]: { display: 'none' },\n      }}\n    >\n      <Img\n        css={[\n          {\n            position: 'absolute',\n            width: '100%',\n            height: '100%',\n            left: 0,\n            top: 0,\n          },\n          preservereAspectRatio && {\n            height: 'auto',\n            top: '50%',\n            transform: 'translateY(-50%)',\n          },\n        ]}\n        imgStyle={{ objectPosition: 'top center' }}\n        fluid={lame.image.childImageSharp.fluid}\n        alt={lame.title}\n      />\n    </div>\n    <div\n      css={{\n        width: '42%',\n        flexShrink: 0,\n        padding: '50px 100px',\n        display: 'flex',\n        flexDirection: 'column',\n        justifyContent: 'center',\n        [mediaQuery.notDesktop]: {\n          width: '100%',\n          padding: 40,\n          height: 'auto',\n        },\n      }}\n    >\n      <h2\n        css={{\n          fontFamily: fonts.title,\n          fontWeight: fontWeights.regular,\n          fontSize: fontSizes.larger,\n          fontStyle: 'italic',\n          letterSpacing: 5,\n          marginBottom: 40,\n          [mediaQuery.notDesktop]: { marginBottom: 20 },\n        }}\n      >\n        {lame.title}\n      </h2>\n      <div\n        css={{ fontSize: fontSizes.medium }}\n        dangerouslySetInnerHTML={{ __html: lame.body }}\n      />\n    </div>\n  </section>\n);\n"],"sourceRoot":""}