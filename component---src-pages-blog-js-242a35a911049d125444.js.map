{"version":3,"sources":["webpack:///./node_modules/gatsby/node_modules/core-js/modules/es6.string.small.js","webpack:///./src/utils/formatDate.js","webpack:///./src/components/PostHtmlRenderer.js","webpack:///./src/pages/blog.js"],"names":["createHTML","this","formatDate","date","Date","Intl","DateTimeFormat","year","month","day","format","PostHtmlRenderer","html","props","css","fontSize","fontSizes","medium","h2","larger","marginTop","marginBottom","large","h4","mediumLarge","li","img","maxWidth","figcaption","color","colors","darkGrey","small","fontStyle","textAlign","figure","margin","hr","width","border","borderTop","dark","mediaQuery","smartphone","dangerouslySetInnerHTML","__html","BlogPage","data","markdownRemark","frontmatter","metaDescription","metaTitle","title","readMoreText","allMarkdownRemark","description","display","flexDirection","HEADER_HEIGHT","alignItems","notDesktop","HEADER_MOBILE_HEIGHT","paddingLeft","paddingRight","height","fontFamily","fonts","fontWeight","fontWeights","regular","nodes","map","name","parent","mainImage","mainImageTitle","mainImageAlt","author","excerpt","key","position","fluid","childImageSharp","alt","padding","to","textDecoration","normal","flex","linkStyle","lightGrey","text","alignSelf","pageQuery"],"mappings":"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","file":"component---src-pages-blog-js-242a35a911049d125444.js","sourcesContent":["'use strict';\n// B.2.3.11 String.prototype.small()\nrequire('./_string-html')('small', function (createHTML) {\n  return function small() {\n    return createHTML(this, 'small', '', '');\n  };\n});\n","const formatDate = (date) => {\n  if (!(date instanceof Date)) {\n    date = new Date(date);\n  }\n  const options = {\n    year: 'numeric',\n    month: 'short',\n    day: 'numeric',\n  };\n  return new Intl.DateTimeFormat('en-US', options).format(date);\n};\n\nexport default formatDate;\n","import React from 'react';\nimport { fontSizes, colors, mediaQuery } from '../theme';\n\n// eslint-disable-next-line react/prop-types\nconst PostHtmlRenderer = ({ html, ...props }) => (\n  <div\n    css={{\n      fontSize: fontSizes.medium,\n\n      h2: {\n        fontSize: fontSizes.larger,\n        marginTop: 40,\n        marginBottom: 20,\n      },\n      'h3,h4': {\n        fontSize: fontSizes.large,\n        marginTop: 30,\n        marginBottom: 15,\n      },\n      h4: { fontSize: fontSizes.mediumLarge },\n      'p,ul,ol': { marginBottom: 15, marginTop: 10 },\n      li: { marginBottom: 10 },\n      img: { maxWidth: '100%' },\n      figcaption: {\n        color: colors.darkGrey,\n        fontSize: fontSizes.small,\n        fontStyle: 'italic',\n        textAlign: 'center',\n      },\n      figure: { margin: '40px auto' },\n      hr: {\n        width: '150px',\n        margin: '30px auto',\n        border: 0,\n        borderTop: `1px dashed ${colors.dark}`,\n      },\n      [mediaQuery.smartphone]: {\n        fontSize: fontSizes.mediumLarge,\n      },\n    }}\n    dangerouslySetInnerHTML={{ __html: html }}\n    {...props}\n  />\n);\n\nexport default PostHtmlRenderer;\n","/* eslint-disable react/no-danger */\n/* eslint-disable react/prop-types */\nimport React from 'react';\nimport { graphql, Link } from 'gatsby';\nimport Img from 'gatsby-image';\nimport PageHead from '../components/PageHead';\nimport GlobalStyles from '../components/GlobalStyles';\nimport HeaderMenu, {\n  HEADER_HEIGHT,\n  HEADER_MOBILE_HEIGHT,\n} from '../components/HeaderMenu';\nimport Footer from '../components/Footer';\nimport {\n  fonts,\n  fontSizes,\n  fontWeights,\n  linkStyle,\n  colors,\n  mediaQuery,\n} from '../theme';\nimport formatDate from '../utils/formatDate';\nimport PostHtmlRenderer from '../components/PostHtmlRenderer';\n\nconst BlogPage = ({\n  data: {\n    markdownRemark: {\n      frontmatter: { metaDescription, metaTitle, title, readMoreText },\n    },\n    allMarkdownRemark,\n  },\n}) => {\n  return (\n    <>\n      <PageHead description={metaDescription} title={metaTitle} />\n      <GlobalStyles />\n      <HeaderMenu />\n      <div\n        css={{\n          display: 'flex',\n          flexDirection: 'column',\n          marginTop: HEADER_HEIGHT + 80,\n          alignItems: 'center',\n          marginBottom: 60,\n          [mediaQuery.notDesktop]: {\n            marginTop: HEADER_MOBILE_HEIGHT + 30,\n            marginBottom: 10,\n            paddingLeft: 40,\n            paddingRight: 40,\n            height: 'auto',\n          },\n        }}\n      >\n        <h1\n          css={{\n            fontFamily: fonts.title,\n            fontWeight: fontWeights.regular,\n            fontSize: fontSizes.title,\n            textAlign: 'center',\n            marginBottom: 80,\n            [mediaQuery.notDesktop]: { marginBottom: 40 },\n          }}\n        >\n          {title}\n        </h1>\n        {allMarkdownRemark.nodes.map(\n          ({\n            parent: { name },\n            frontmatter: {\n              title,\n              mainImage,\n              mainImageTitle,\n              mainImageAlt,\n              date,\n              author,\n              excerpt,\n            },\n          }) => (\n            <div\n              key={name}\n              css={{\n                display: 'flex',\n                position: 'relative',\n                width: 980,\n                height: 340,\n                marginBottom: 120,\n                [mediaQuery.notDesktop]: {\n                  width: 'auto',\n                  height: 'auto',\n                  flexDirection: 'column',\n                },\n\n                [mediaQuery.smartphone]: {\n                  marginBottom: 60,\n                },\n              }}\n            >\n              <Img\n                css={{\n                  width: '40%',\n                  [mediaQuery.notDesktop]: {\n                    width: '100%',\n                    height: 'calc(2*(100vw - 80px) / 3)',\n                    marginBottom: 30,\n                  },\n                }}\n                fluid={mainImage.childImageSharp.fluid}\n                alt={mainImageAlt}\n                title={mainImageTitle}\n              />\n              <div\n                css={{\n                  width: '60%',\n                  paddingLeft: 30,\n                  paddingRight: 30,\n                  fontSize: fontSizes.medium,\n                  display: 'flex',\n                  flexDirection: 'column',\n                  [mediaQuery.notDesktop]: {\n                    width: 'auto',\n                    padding: 0,\n                  },\n                }}\n              >\n                <h2\n                  css={{\n                    fontFamily: fonts.title,\n                    fontWeight: fontWeights.regular,\n                    fontSize: fontSizes.larger,\n                  }}\n                >\n                  <Link\n                    to={`/blog/${name}`}\n                    css={{\n                      color: colors.dark,\n                      textDecoration: 'none',\n                      ':hover,:focus,:active': {\n                        textDecoration: 'underline',\n                      },\n                    }}\n                  >\n                    {title}\n                  </Link>\n                </h2>\n                <p\n                  css={{\n                    fontSize: fontSizes.normal,\n                    fontStyle: 'italic',\n                    color: colors.darkGrey,\n                    marginBottom: 20,\n                  }}\n                >\n                  <span css={{ color: colors.dark, fontStyle: 'normal' }}>\n                    By {author}\n                  </span>\n                  <br />\n                  <span>{formatDate(date)}</span>\n                </p>\n                <PostHtmlRenderer\n                  css={{ flex: 1, fontSize: fontSizes.normal }}\n                  html={excerpt}\n                />\n                <Link\n                  to={`/blog/${name}`}\n                  css={[\n                    linkStyle(colors.lightGrey, colors.text),\n                    {\n                      color: colors.dark,\n                      alignSelf: 'flex-start',\n                      [mediaQuery.notDesktop]: {\n                        marginTop: 20,\n                      },\n                    },\n                  ]}\n                >\n                  {readMoreText}\n                </Link>\n              </div>\n            </div>\n          ),\n        )}\n      </div>\n      <Footer />\n    </>\n  );\n};\n\nexport default BlogPage;\n\nexport const pageQuery = graphql`\n  query {\n    markdownRemark(fileAbsolutePath: { regex: \"/pages/blog.md/\" }) {\n      frontmatter {\n        metaDescription\n        metaTitle\n        title\n        readMoreText\n      }\n    }\n    allMarkdownRemark(\n      filter: { fileAbsolutePath: { regex: \"//blog/.*[.]md/\" } }\n    ) {\n      nodes {\n        parent {\n          ... on File {\n            name\n          }\n        }\n        frontmatter {\n          mainImage {\n            childImageSharp {\n              fluid(maxWidth: 1400) {\n                ...GatsbyImageSharpFluid\n              }\n            }\n          }\n          mainImageTitle\n          mainImageAlt\n          title\n          date\n          author\n          excerpt\n        }\n      }\n    }\n  }\n`;\n"],"sourceRoot":""}