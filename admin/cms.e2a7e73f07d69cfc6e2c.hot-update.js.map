{"version":3,"file":"cms.e2a7e73f07d69cfc6e2c.hot-update.js","sources":["webpack:///./src/cms/EditorPlugins.js","webpack:///./src/cms/textColorStyleFn.js"],"sourcesContent":["import { createLinkPlugin, LINK_TYPE } from 'wix-rich-content-plugin-link';\nimport {\n  createLinkPreviewPlugin,\n  LINK_PREVIEW_TYPE,\n  LinkPreviewProviders,\n} from 'wix-rich-content-plugin-link-preview';\nimport {\n  createLineSpacingPlugin,\n  LINE_SPACING_TYPE,\n} from 'wix-rich-content-plugin-line-spacing';\nimport { createEmojiPlugin, EMOJI_TYPE } from 'wix-rich-content-plugin-emoji';\nimport { createImagePlugin, IMAGE_TYPE } from 'wix-rich-content-plugin-image';\nimport {\n  createUndoRedoPlugin,\n  UNDO_REDO_TYPE,\n} from 'wix-rich-content-plugin-undo-redo';\nimport {\n  createDividerPlugin,\n  DIVIDER_TYPE,\n} from 'wix-rich-content-plugin-divider';\nimport {\n  createVerticalEmbedPlugin,\n  VERTICAL_EMBED_TYPE,\n  verticalEmbedProviders,\n} from 'wix-rich-content-plugin-vertical-embed';\nimport {\n  createExternalMentionsPlugin,\n  EXTERNAL_MENTIONS_TYPE,\n} from 'wix-rich-content-plugin-mentions';\nimport {\n  createTextColorPlugin,\n  TEXT_COLOR_TYPE,\n  createTextHighlightPlugin,\n  TEXT_HIGHLIGHT_TYPE,\n} from 'wix-rich-content-plugin-text-color';\n\nimport {\n  customForegroundStyleFn,\n  styleSelectionPredicate,\n  colorScheme,\n  customBackgroundStyleFn,\n} from './textColorStyleFn';\n\n// import { createVerticalEmbedPlugin } from 'wix-rich-content-plugin-vertical-embed';\n\n// eslint-disable-next-line import/prefer-default-export\nexport const editorPlugins = [\n  createLinkPreviewPlugin,\n  createImagePlugin,\n  createDividerPlugin,\n  createLineSpacingPlugin,\n  createLinkPlugin,\n  createExternalMentionsPlugin,\n  createTextColorPlugin,\n  createEmojiPlugin,\n  createTextHighlightPlugin,\n  createUndoRedoPlugin,\n];\n\nconst { Twitter, YouTube } = LinkPreviewProviders;\nexport const config = {\n  [LINK_PREVIEW_TYPE]: {\n    enableEmbed: true, // [Twitter, YouTube]\n    enableLinkPreview: true,\n    // fetchData: mockFetchUrlPreviewData(),\n    exposeEmbedButtons: [Twitter, YouTube],\n  },\n  [TEXT_HIGHLIGHT_TYPE]: {\n    // toolbar: {\n    //   icons: {\n    //     InsertPluginButtonIcon: MyCustomIcon,\n    //   },\n    // },\n    colorScheme,\n    styleSelectionPredicate,\n    customStyleFn: customBackgroundStyleFn,\n    onColorAdded: (color) => (userColors = [...userColors, color]),\n    getUserColors: () => userColors,\n  },\n  [TEXT_COLOR_TYPE]: {\n    // toolbar: {\n    //   icons: {\n    //     InsertPluginButtonIcon: MyCustomIcon,\n    //   },\n    // },\n    colorScheme,\n    styleSelectionPredicate,\n    customStyleFn: customForegroundStyleFn,\n    onColorAdded: (color) => (userColors = [...userColors, color]),\n    getUserColors: () => userColors,\n  },\n};\n","import { isHexColor } from 'wix-rich-content-common';\n\nexport const colorScheme = {\n  color1: {\n    color: '#fff',\n    index: 0,\n  },\n  color2: {\n    color: '#303030',\n    index: 1,\n  },\n  color3: {\n    color: '#bfad80',\n    index: 2,\n  },\n  color4: {\n    color: '#bf695c',\n    index: 3,\n  },\n  color5: {\n    color: '#f7f7f7',\n    index: 4,\n  },\n  color6: {\n    color: '#f7f7f7',\n    index: 5,\n  },\n};\n\nexport const viewerCustomForegroundStyleFn = (style) => {\n  let colorRule = {};\n  if (colorScheme[style] && isHexColor(colorScheme[style].color)) {\n    colorRule = { color: colorScheme[style].color };\n  } else if (isHexColor(style)) {\n    colorRule = { color: style };\n  }\n  return colorRule;\n};\n\nexport const customForegroundStyleFn = (styles) =>\n  styles.toArray().reduce((cssStyle, style) => {\n    return {\n      ...cssStyle,\n      ...viewerCustomForegroundStyleFn(style),\n    };\n  }, {});\n\nexport const viewerCustomBackgroundStyleFn = (style) => {\n  let colorRule = {};\n  if (colorScheme[style] && isHexColor(colorScheme[style].color)) {\n    colorRule = { backgroundColor: colorScheme[style].color };\n  } else if (isHexColor(style)) {\n    colorRule = { backgroundColor: style };\n  }\n  return colorRule;\n};\n\nexport const customBackgroundStyleFn = (styles) =>\n  styles.toArray().reduce((cssStyle, style) => {\n    return {\n      ...cssStyle,\n      ...viewerCustomBackgroundStyleFn(style),\n    };\n  }, {});\n\nexport const styleSelectionPredicate = (style) => {\n  return (\n    (colorScheme[style] && isHexColor(colorScheme[style].color)) ||\n    isHexColor(style)\n  );\n};\n"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AAKA;AAIA;AACA;AACA;AAIA;AAIA;AAKA;AAIA;AAOA;AASA;AACA;AAAA;AAaA;AAAA;AACA;AAEA;AAAA;AACA;AACA;AACA;AAJA;AAOA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AAVA;AAaA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AAVA;;;;;;;;;;AAjCA;AAaA;AAAA;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AC5DA;AAEA;AACA;AACA;AACA;AAFA;AAIA;AACA;AACA;AAFA;AAIA;AACA;AACA;AAFA;AAIA;AACA;AACA;AAFA;AAIA;AACA;AACA;AAFA;AAIA;AACA;AACA;AAFA;AArBA;AA2BA;AACA;AACA;AAAA;AACA;AAAA;AAAA;AACA;AACA;AAAA;AAAA;AACA;AACA;AAAA;AACA;AAEA;AAAA;AAEA;AAIA;AANA;AAQA;AACA;AACA;AAAA;AACA;AAAA;AAAA;AACA;AACA;AAAA;AAAA;AACA;AACA;AAAA;AACA;AAEA;AAAA;AAEA;AAIA;AANA;AAQA;AACA;AAIA;;;;;;;;;;AApEA;AA2BA;AAUA;AAQA;AAUA;AAQA;;;;;;;;;;;;;A","sourceRoot":""}