{"version":3,"file":"cms.c330522dbd2f8e2f17fb.hot-update.js","sources":["webpack:///./src/cms/CKEditorWidget.js"],"sourcesContent":["/* eslint-disable react/prefer-stateless-function */\n/* eslint-disable react/prop-types */\nimport React from 'react';\nimport CKEditor from '@ckeditor/ckeditor5-react';\nimport BallonBlockEditor from '@ckeditor/ckeditor5-build-balloon-block';\n\nclass CKEditorWidget extends React.Component {\n  controlID = `rich-editor-${Math.random()}`;\n\n  constructor() {\n    super();\n    class MyUploadAdapter {\n      constructor(loader) {\n        // The file loader instance to use during the upload.\n        this.loader = loader;\n      }\n\n      // Starts the upload process.\n      upload() {\n        // Update the loader's progress.\n        server.onUploadProgress((data) => {\n          loader.uploadTotal = data.total;\n          loader.uploaded = data.uploaded;\n        });\n\n        // Return a promise that will be resolved when the file is uploaded.\n        return loader.file.then((file) => server.upload(file));\n      }\n\n      // Aborts the upload process.\n      abort() {\n        // Reject the promise returned from the upload() method.\n        server.abortUpload();\n      }\n    }\n\n    function UploadAdapterPlugin(editor) {\n      editor.plugins.get('FileRepository').createUploadAdapter = (loader) => {\n        // Configure the URL to the upload script in your back-end here!\n        return new MyUploadAdapter(loader);\n      };\n    }\n  }\n\n  render() {\n    const {\n      forID,\n      classNameWrapper,\n      setActiveStyle,\n      setInactiveStyle,\n      value,\n      onChange,\n    } = this.props;\n    return (\n      <div\n        className={classNameWrapper}\n        style={{\n          paddingLeft: 10,\n          paddingRight: 10,\n          minHeight: 200,\n        }}\n      >\n        <CKEditor\n          id={forID}\n          editor={BallonBlockEditor}\n          config={{\n            blockToolbar: [\n              'heading',\n              '|',\n              'alignment',\n              'bulletedList',\n              'numberedList',\n              '|',\n              'indent',\n              'outdent',\n              '|',\n              'imageUpload',\n              'blockQuote',\n              'insertTable',\n              'mediaEmbed',\n              '|',\n              'undo',\n              'redo',\n            ],\n            toolbar: {\n              items: ['bold', 'italic', 'link'],\n            },\n          }}\n          data={value}\n          onChange={(event, editor) => {\n            const data = editor.getData();\n            onChange(data);\n          }}\n          onBlur={() => setInactiveStyle()}\n          onFocus={() => setActiveStyle()}\n          style={{ outline: 'none' }}\n        />\n      </div>\n    );\n  }\n}\n\nexport default CKEditorWidget;\n"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AAAA;AACA;AACA;AACA;;;AAEA;;;;;AAGA;AAAA;AACA;AAAA;AADA;AACA;AADA;AAGA;AACA;AACA;AACA;AACA;AACA;AARA;AACA;AADA;AAUA;AACA;AACA;AACA;AACA;AACA;AAEA;AAAA;AAAA;AACA;AAlBA;AACA;AADA;AAsBA;AACA;AACA;AACA;AAzBA;AAAA;AAAA;AAAA;AAAA;AACA;AADA;AAAA;AACA;AA0BA;AACA;AACA;AACA;AACA;AACA;AACA;AAjCA;AAiCA;AACA;;;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AASA;AAEA;AACA;AACA;AACA;AACA;AAHA;AAFA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AASA;AACA;AACA;AACA;AAkBA;AACA;AADA;AAnBA;AAuBA;AACA;AACA;AACA;AAAA;AACA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AAjCA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAqCA;AACA;;;;;;;;AA9FA;AACA;AA+FA;AAAA;;;;;;;;;;AAhGA;;;;;;;;;;;;;;A","sourceRoot":""}