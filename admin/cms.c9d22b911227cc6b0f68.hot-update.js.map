{"version":3,"file":"cms.c9d22b911227cc6b0f68.hot-update.js","sources":["webpack:///./src/cms/CKEditorWidget.js"],"sourcesContent":["/* eslint-disable react/prefer-stateless-function */\n/* eslint-disable react/prop-types */\n// eslint-disable-next-line max-classes-per-file\nimport React from 'react';\nimport { v4 as uuidv4 } from 'uuid';\nimport CKEditor from '@ckeditor/ckeditor5-react';\n// eslint-disable-next-line import/no-extraneous-dependencies\nimport { Map } from 'immutable';\nimport BallonBlockEditor from '@ckeditor/ckeditor5-build-balloon-block';\n\nclass CKEditorWidget extends React.Component {\n  currentUid = null;\n\n  openMediaLibrary() {\n    const { field, onOpenMediaLibrary, value } = this.props;\n    this.currentUid = uuidv4();\n    /**\n     * `options` hash as a general field property is deprecated, only used\n     * when external media libraries were first introduced. Not to be\n     * confused with `options` for the select widget, which serves a different\n     * purpose.\n     */\n\n    return onOpenMediaLibrary({\n      controlID: this.currentUid,\n      forImage: false,\n      privateUpload: field.get('private'),\n      value,\n      allowMultiple: false,\n      config: field.get('media_library', Map()).get('config'),\n      field,\n    });\n  }\n\n  componentDidUpdate() {\n    const { mediaPaths } = this.props;\n    const mediaPath = this.currentUid && mediaPaths.get(this.currentUid);\n    if (mediaPath) {\n      this.currentUid = null;\n      this.editor.model.change((writer) => {\n        const imageElement = writer.createElement('image', {\n          src: mediaPath,\n        });\n\n        // Insert the image in the current selection location.\n        this.editor.model.insertContent(\n          imageElement,\n          this.editor.model.document.selection,\n        );\n      });\n    }\n  }\n\n  render() {\n    const {\n      forID,\n      classNameWrapper,\n      setActiveStyle,\n      setInactiveStyle,\n      value,\n      onChange,\n    } = this.props;\n    return (\n      <div\n        className={classNameWrapper}\n        style={{\n          paddingLeft: 10,\n          paddingRight: 10,\n          minHeight: 200,\n        }}\n      >\n        <CKEditor\n          id={forID}\n          editor={BallonBlockEditor}\n          onInit={(editor) => {\n            this.editor = editor;\n          }}\n          config={{\n            insertImage: {\n              openMediaLibrary: () => {\n                this.openMediaLibrary();\n              },\n            },\n          }}\n          data={value}\n          onChange={(event, editor) => {\n            const data = editor.getData();\n            onChange(data);\n          }}\n          onBlur={() => setInactiveStyle()}\n          onFocus={() => setActiveStyle()}\n          style={{ outline: 'none' }}\n        />\n      </div>\n    );\n  }\n}\n\nexport default CKEditorWidget;\n"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAEA;;;;;;;;;;;;;AACA;;;;;;AAEA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;;;;;;;AAOA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAPA;AASA;AACA;AACA;AAAA;AACA;AADA;AAEA;AACA;AAAA;AACA;AACA;AACA;AACA;AADA;AACA;AAIA;AAIA;AACA;AACA;AACA;AACA;AAAA;AACA;AADA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AASA;AAEA;AACA;AACA;AACA;AACA;AAHA;AAFA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AASA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAHA;AADA;AAOA;AACA;AACA;AACA;AAAA;AACA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AApBA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAwBA;AACA;;;;;;;;AAtFA;AACA;AAuFA;AAAA;;;;;;;;;;AAxFA;;;;;;;;;;;;;;A","sourceRoot":""}