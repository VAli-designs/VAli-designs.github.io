{"version":3,"sources":["webpack:///./src/components/GetInTouch.js","webpack:///./src/pages/404.js"],"names":["GetInTouch","markdownRemark","html","frontmatter","bgImage","bgImageAlt","bgImageTitle","title","buttonText","css","height","position","mediaQuery","notDesktop","fluid","childImageSharp","style","width","alt","fontFamily","fonts","fontWeight","fontWeights","regular","fontSize","fontSizes","fontStyle","letterSpacing","marginBottom","dangerouslySetInnerHTML","__html","flex","large","href","linkStyle","colors","green","blue","marginTop","alignSelf","Page404","data","metaDescription","metaTitle","description","display","flexDirection","HEADER_HEIGHT","alignItems","textAlign","padding","pageQuery"],"mappings":"mUAmGeA,IAtFI,WAAO,IAAD,WAErBC,eACEC,EAHmB,EAGnBA,KAHmB,IAInBC,YAAeC,EAJI,EAIJA,QAASC,EAJL,EAIKA,WAAYC,EAJjB,EAIiBA,aAAcC,EAJ/B,EAI+BA,MAAOC,EAJtC,EAIsCA,WAyB7D,OACE,uBACED,MAAOA,EACPE,IAAG,gBACDC,OAAQ,IACRC,SAAU,YAFT,EAGAC,IAAWC,YAAa,CAAEH,OAAQ,KAHlC,KAMH,YAAC,IAAD,CACEI,MAAOV,EAAQW,gBAAgBD,MAC/BE,MAAO,CAAEL,SAAU,WAAYD,OAAQ,OAAQO,MAAO,QACtDV,MAAOD,EACPY,IAAKb,IAEP,mBACEI,IAAG,GAWH,kBACEA,IAAG,YAAE,CACHU,WAAYC,IAAMb,MAClBc,WAAYC,IAAYC,QACxBC,SAAUC,IAAUlB,MACpBmB,UAAW,SACXC,cAAe,EACfC,aAAc,MAGfrB,GAEH,mBACEsB,wBAAyB,CAAEC,OAAQ5B,GACnCO,IAAG,YAAE,CAAEsB,KAAM,EAAGP,SAAUC,IAAUO,UAEtC,iBACEC,KAAK,WACLxB,IAAG,YAAE,CACHyB,YAAUC,IAAOC,MAAOD,IAAOE,MAC/B,CAAEC,UAAW,GAAIC,UAAW,aAG7B/B,O,ynDCxCIgC,UAzCC,SAAC,GAAD,QACdC,KACExC,eACEE,YAAeuC,EAHL,EAGKA,gBAAiBC,EAHtB,EAGsBA,UAAWpC,EAHjC,EAGiCA,MAHjC,OAOd,8BACE,YAAC,IAAD,CAAUqC,YAAaF,EAAiBnC,MAAOoC,IAC/C,YAAC,IAAD,MACA,YAAC,IAAD,MACA,mBACElC,IAAG,YAAE,CACHoC,QAAS,OACTC,cAAe,SACfR,UAAWS,IAAgB,GAC3BC,WAAY,SACZpB,aAAc,GACdJ,SAAUC,IAAUO,MACpBiB,UAAW,SACXlB,KAAM,KAGR,kBACEtB,IAAG,YAAE,CACHU,WAAYC,IAAMb,MAClBc,WAAYC,IAAYC,QACxBC,SAAUC,IAAUlB,MACpB0C,UAAW,SACXrB,aAAc,GACdsB,QAAS,MAGV3C,IAGL,YAAC,IAAD,MACA,YAAC,IAAD,QAMG,IAAM4C,EAAS","file":"component---src-pages-404-js-e539bf4c47269a6693e5.js","sourcesContent":["/* eslint-disable react/no-danger */\nimport React from 'react';\nimport { useStaticQuery, graphql } from 'gatsby';\nimport Img from 'gatsby-image';\nimport {\n  colors,\n  linkStyle,\n  fonts,\n  fontWeights,\n  fontSizes,\n  mediaQuery,\n} from '../theme';\n\nconst GetInTouch = () => {\n  const {\n    markdownRemark: {\n      html,\n      frontmatter: { bgImage, bgImageAlt, bgImageTitle, title, buttonText },\n    },\n  } = useStaticQuery(graphql`\n    query {\n      markdownRemark(\n        fileAbsolutePath: { regex: \"/components/get-intouch.md/\" }\n      ) {\n        html\n        frontmatter {\n          bgImage {\n            childImageSharp {\n              fluid(maxWidth: 3000) {\n                ...GatsbyImageSharpFluid\n              }\n            }\n          }\n          bgImageAlt\n          bgImageTitle\n          title\n          buttonText\n        }\n      }\n    }\n  `);\n\n  return (\n    <section\n      title={title}\n      css={{\n        height: 400,\n        position: 'relative',\n        [mediaQuery.notDesktop]: { height: 300 },\n      }}\n    >\n      <Img\n        fluid={bgImage.childImageSharp.fluid}\n        style={{ position: 'absolute', height: '100%', width: '100%' }}\n        title={bgImageTitle}\n        alt={bgImageAlt}\n      />\n      <div\n        css={{\n          position: 'absolute',\n          height: '100%',\n          width: '100%',\n          display: 'flex',\n          flexDirection: 'column',\n          padding: 40,\n          textAlign: 'center',\n          color: 'white',\n        }}\n      >\n        <h2\n          css={{\n            fontFamily: fonts.title,\n            fontWeight: fontWeights.regular,\n            fontSize: fontSizes.title,\n            fontStyle: 'italic',\n            letterSpacing: 5,\n            marginBottom: 40,\n          }}\n        >\n          {title}\n        </h2>\n        <div\n          dangerouslySetInnerHTML={{ __html: html }}\n          css={{ flex: 1, fontSize: fontSizes.large }}\n        />\n        <a\n          href=\"/contact\"\n          css={[\n            linkStyle(colors.green, colors.blue),\n            { marginTop: 30, alignSelf: 'center' },\n          ]}\n        >\n          {buttonText}\n        </a>\n      </div>\n    </section>\n  );\n};\n\nexport default GetInTouch;\n","/* eslint-disable react/no-danger */\n/* eslint-disable react/prop-types */\nimport React from 'react';\nimport { graphql } from 'gatsby';\nimport PageHead from '../components/PageHead';\nimport GlobalStyles from '../components/GlobalStyles';\nimport HeaderMenu, { HEADER_HEIGHT } from '../components/HeaderMenu';\nimport Footer from '../components/Footer';\nimport { fonts, fontSizes, fontWeights } from '../theme';\nimport GetInTouch from '../components/GetInTouch';\n\nconst Page404 = ({\n  data: {\n    markdownRemark: {\n      frontmatter: { metaDescription, metaTitle, title },\n    },\n  },\n}) => (\n  <>\n    <PageHead description={metaDescription} title={metaTitle} />\n    <GlobalStyles />\n    <HeaderMenu />\n    <div\n      css={{\n        display: 'flex',\n        flexDirection: 'column',\n        marginTop: HEADER_HEIGHT + 80,\n        alignItems: 'center',\n        marginBottom: 50,\n        fontSize: fontSizes.large,\n        textAlign: 'center',\n        flex: 1,\n      }}\n    >\n      <h1\n        css={{\n          fontFamily: fonts.title,\n          fontWeight: fontWeights.regular,\n          fontSize: fontSizes.title,\n          textAlign: 'center',\n          marginBottom: 40,\n          padding: 40,\n        }}\n      >\n        {title}\n      </h1>\n    </div>\n    <GetInTouch />\n    <Footer />\n  </>\n);\n\nexport default Page404;\n\nexport const pageQuery = graphql`\n  query {\n    markdownRemark(fileAbsolutePath: { regex: \"/pages/404.md/\" }) {\n      frontmatter {\n        metaDescription\n        metaTitle\n        title\n      }\n    }\n  }\n`;\n"],"sourceRoot":""}